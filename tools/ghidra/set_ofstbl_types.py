# Define types for offset table.
# @author   Pokemium (2022-11-26)
# @category BZ3J

"""
    主に &tbl[idx] + idx*4 でデータを表すようなOffsetTableを想定
    例えば、MotionPlttOffsets(0x085b5cd0)は u32[280]で
        MotionPlttHdr_${idx} = &MotionPlttOffsets[idx] + idx*4
    となります。
"""

MAX = 1 # For develop

ADDRS = [
    0x085B6130,
    0x085B6158,
    0x085B6180,
    0x085B61A8,
    0x085B61C0,
    0x085B61F8,
    0x085B62E8,
    0x085B62F8,
    0x085B63F8,
    0x085B64BC,
    0x085B65BC,
    0x085B65CC,
    0x085B6750,
    0x085B6814,
    0x085B68D8,
    0x085B697C,
    0x085B6AC0,
    0x085B6B64,
    0x085B6C08,
    0x085B6CAC,
    0x085B6D50,
    0x085B6E94,
    0x085B6F38,
    0x085B6FDC,
    0x085B7080,
    0x085B71C4,
    0x085B7208,
    0x085B72EC,
    0x085B7370,
    0x085B73F4,
    0x085B74B8,
    0x085B773C,
    0x085B7800,
    0x085B79BC,
    0x085B7E90,
    0x085B7EA0,
    0x085B7EB4,
    0x085B7EC8,
    0x085B7EE4,
    0x085B7EEC,
    0x085B7EFC,
    0x085B7F9C,
    0x085B80C0,
    0x085B8184,
    0x085B8194,
    0x085B81F8,
    0x085B82EC,
    0x085B8314,
    0x085B8324,
    0x085B83C8,
    0x085B8408,
    0x085B843C,
    0x085B8470,
    0x085B8478,
    0x085B84AC,
    0x085B84D0,
    0x085B84E0,
    0x085B8504,
    0x085B858C,
    0x085B859C,
    0x085B85C4,
    0x085B8604,
    0x085B8688,
    0x085B86C0,
    0x085B8704,
    0x085B8788,
    0x085B880C,
    0x085B8820,
    0x085B8834,
    0x085B886C,
    0x085B8910,
    0x085B89D4,
    0x085B8A98,
    0x085B8B1C,
    0x085B8BA0,
    0x085B8D44,
    0x085B8DC8,
    0x085B8F6C,
    0x085B90F0,
    0x085B9274,
    0x085B92F0,
    0x085B932C,
    0x085B9364,
    0x085B93E8,
    0x085B946C,
    0x085B94D0,
    0x085B95F4,
    0x085B9738,
    0x085B977C,
    0x085B9800,
    0x085B9884,
    0x085B9908,
    0x085B992C,
    0x085B9950,
    0x085B9974,
    0x085B9998,
    0x085B99BC,
    0x085B9C20,
    0x085B9E24,
    0x085B9EA8,
    0x085B9FCC,
    0x085B99BC,
    0x085BA070,
    0x085BA134,
    0x085BA1F8,
    0x085BA204,
    0x085BA22C,
    0x085BA244,
    0x085BA328,
    0x085BA338,
    0x085BA348,
    0x085BA36C,
    0x085BA3F0,
    0x085BA5A4,
    0x085BA5AC,
    0x085BA5CC,
    0x085BA5EC,
    0x085BA608,
    0x085BA618,
    0x085BA628,
    0x085BA67C,
    0x085BA770,
    0x085BA794,
    0x085BA840,
    0x085BAA04,
    0x085BAC00,
    0x085BAC18,
    0x085BAC28,
    0x085BACF8,
    0x085BAD88,
    0x085BADC4,
    0x085BADDC,
    0x085BAE6C,
    0x085BAE88,
    0x085BAE9C,
    0x085BAEC0,
    0x085BAEDC,
    0x085BAF00,
    0x085BAF24,
    0x085BAF40,
    0x085BAF48,
    0x085BAF58,
    0x085BAF6C,
    0x085BB054,
    0x085BB214,
    0x085BB398,
    0x085BB3C4,
    0x085BB3F0,
    0x085BB40C,
    0x085BB424,
    0x085BB43C,
    0x085BB4A4,
    0x085BB4AC,
    0x085BB4B8,
    0x085BB4F8,
    0x085BB508,
    0x085BB518,
    0x085BB528,
    0x085BB538,
    0x085BB548,
    0x085BB614,
    0x085BB62C,
    0x085BB644,
    0x085BB6CC,
    0x085BB6DC,
    0x085BB6F0,
    0x085BB6FC,
    0x085BB710,
    0x085BB894,
    0x085BB958,
    0x085BBA5C,
    0x085BBBA0,
    0x085BBBC8,
    0x085BBBF0,
    0x085BBC18,
    0x085BBC40,
    0x085BBC68,
    0x085BBC90,
    0x085BBC9C,
    0x085BBCAC,
    0x085BBCD4,
    0x085BBCFC,
    0x085BBD24,
    0x085BBD4C,
    0x085BBD74,
    0x085B6130,
    0x085B6130,
    0x085BBD9C,
    0x085BBE20,
    0x085BBEA4,
    0x085BBF68,
    0x085BC0EC,
    0x085BC114,
    0x085BC11C,
    0x085BC1A0,
    0x085BC224,
    0x085BC318,
    0x085BC32C,
    0x085BC390,
    0x085BC3A8,
    0x085BC3B4,
    0x085BC3D8,
    0x085BC3F0,
    0x085BC49C,
    0x085BC520,
    0x085BC544,
    0x085BC5D4,
    0x085BC664,
    0x085BC6C4,
    0x085BC724,
    0x085BC7C8,
    0x085BC814,
    0x085BC89C,
    0x085BC8B8,
    0x085BC8DC,
    0x085BC900,
    0x085BC910,
    0x085BC93C,
    0x085BC95C,
    0x085BC980,
    0x085BC990,
    0x085BCA14,
    0x085BCA78,
    0x085BCAE0,
    0x085BCB34,
    0x085BCC3C,
    0x085BCCE0,
    0x085BCD04,
    0x085BCD68,
    0x085BCE24,
    0x085BCE38,
    0x085BCE78,
    0x085BCE8C,
    0x085BCEA0,
    0x085BCEB4,
    0x085BD024,
    0x085BD038,
    0x085BD04C,
    0x085BD060,
    0x085BD090,
    0x085BD0C0,
    0x085BD384,
    0x085BD3C8,
    0x085BD5CC,
    0x085BD5F4,
    0x085BD618,
    0x085BD63C,
    0x085BD660,
    0x085BD684,
    0x085BD6C8,
    0x085BD70C,
    0x085BD790,
    0x085BD874,
    0x085BD958,
    0x085BDA3C,
    0x085BDB20,
    0x085BDC04,
    0x085BDCE8,
    0x085BDDCC,
    0x085BDEB0,
    0x085BDECC,
    0x085BDEE8,
    0x085BDF04,
    0x085BDF98,
    0x085BDFB4,
    0x085BE078,
    0x085BE1AC,
    0x085BE1D4,
    0x085BE1E0,
    0x085BE1EC,
    0x085BE2A0,
    0x085BE2C4,
    0x085BE2E8,
    0x085BE36C,
    0x085BE3AC,
    0x085BE3D0,
    0x085BE3F4,
    0x085BE558,
    0x085BE57C,
    0x085BE6E0,
];

TYPE_NAME = "MotionPlttHdr"

dtm = currentProgram.getDataTypeManager()

a = dtm.getLocalSourceArchive()

def datatype(typename):
    for dt in dtm.getDataTypes(a):
        if dt.getName() == typename:
            return dt
    return None

TYPE = datatype(TYPE_NAME)

def create_datatype(addr, dt):
    """Define addr type on Ghidra.

    Args:
        addr (int): Address e.g. 0x08000000
        dt (str): Typename e.g. "u8"
    
    Returns:
        None: No return
    """
    clearListing(addr)
    createData(addr, dt)
    return

def main():
    i = 0;
    for addr in ADDRS:
        print(i, toAddr(addr))
        create_datatype(toAddr(addr), TYPE)

        i += 1
        if MAX != -1 and i >= MAX:
            return

if __name__ == "__main__":
    main()
